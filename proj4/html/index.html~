<html>
<head>
<title>CS 143 Project</title>
<link href='http://fonts.googleapis.com/css?family=Nunito:300|Crimson+Text|Droid+Sans+Mono' rel='stylesheet' type='text/css'>
<link rel="stylesheet" title="Default" href="styles/github.css">
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js"></script>  

<link rel="stylesheet" href="highlighting/styles/default.css">
<script src="highlighting/highlight.pack.js"></script>

<style type="text/css">
body {
	margin: 0px;
	width: 100%;
	font-family: 'Crimson Text', serif;
	font-size: 20px;
	background: #fcfcfc;
}
h1 {
	font-family: 'Nunito', sans-serif;
	font-weight: normal;
	font-size: 28px;
	margin: 25px 0px 0px 0px;
	text-transform: lowercase;

}

h2 {
	font-family: 'Nunito', sans-serif;
	font-weight: normal;
	font-size: 32px;
	margin: 15px 0px 35px 0px;
	color: #333;	
	word-spacing: 3px;
}

h3 {
	font-family: 'Nunito', sans-serif;
	font-weight: normal;
	font-size: 26px;
	margin: 10px 0px 10px 0px;
	color: #333;
	word-spacing: 2px;
}
h4 {
	font-family: 'Nunito', sans-serif;
	font-weight: normal;
	font-size: 22px;
	margin: 10px 0px 10px 0px;
	color: #333;
	word-spacing: 2px;
}

h5 {
	font-family: 'Nunito', sans-serif;
	font-weight: normal;
	font-size: 18px;
	margin: 10px 0px 10px 0px;
	color: #111;
	word-spacing: 2px;
}

p, li {
	color: #444;
}

a {
	color: #DE3737;
}

.container {
	margin: 0px auto 0px auto;
	width: 1160px;
}

#header {
	background: #333;
	width: 100%;
}

#headersub {
	color: #ccc;
	width: 960px;
	margin: 0px auto 0px auto;
	padding: 20px 0px 20px 0px;
}

.chart {
	width: 480px;
}
.lol {
	font-size: 16px;
	color: #888;
	font-style: italic;
}
.sep {
	height: 1px;
	width: 100%;
	background: #999;
	margin: 20px 0px 20px 0px;
}
.footer{
	font-size: 16px;
}
.latex {
	width: 100%;
}

.latex img {
	display: block;
	margin: 0px auto 0px auto;
}

pre {
	font-family: 'Droid Sans Mono';
	font-size: 14px;
}

table td {
  text-align: center;
  vertical-align: middle;
}

table td img {
  text-align: center;
  vertical-align: middle;
}

#contents a {
}
</style>
<script type="text/javascript">
    hljs.initHighlightingOnLoad();
</script>
</head>
<body>
<div id="header" >
<div id="headersub">
<h1>Sarah Parker <span style="color: #DE3737">(smparker)</span></h1>
</div>
</div>
<div class="container">

<h2>CS 143 / Project 4 / Face Detection with a Sliding Window</h2>

</div>

<p> 	In this project, I implemented face detection using a sliding window technique. A linear SVM was trained with HoG features from positive and negative training examples. Patches of HoG features from testing images were created by using a sliding window on an image scale pyramid. These patches were classified and thresholded by confidence value. Non-maximum suppression was applied to the final bounding boxes from all scales.</p>


<h3>Results:</h3>

<p> 	Best performance was achieved using a step-size of 1, a confidence threshold of -1, 20,000 negative features mined at several scales and a HoG cell size of 3. This resulted in an average precision of 83%, but also resulted in many false positives and was very slow. Though the accuracy is fairly high, I realize that this is a pretty brute-forcey way to do this.</p>


<p>
Face template HoG visualization for my best results! Looks like a face, pretty cool. 
<img src="hog.jpg">
<p>
Precision Recall Curve HoG Cell Size 3
<p>
<img src="percision-recall.jpg">
<p>
<p>
Precision Recall Curve HoG Cell Size 6
<p>
<img src="precision2.jpg">

</center>

<div style="clear:both" >
<p> Decreasing the HoG cell size from 6 to 3 produced a decent improvement precision. Increasing the number of mined negative training examples also improved precision, but significantly slowed down the training process. 	</p>
</div>
</body>
</html>
